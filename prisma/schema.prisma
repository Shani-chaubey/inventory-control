generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Item {
  id                      String                    @id @default(auto()) @map("_id") @db.ObjectId
  title                   String
  description             String?
  category                Category                  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId              String                    @db.ObjectId
  sku                     String                    @unique
  barcode                 String?
  qty                     Int
  unit                    Unit                      @relation(fields: [unitId], references: [id])
  unitId                  String                    @db.ObjectId
  brand                   Brand                     @relation(fields: [brandId], references: [id])
  brandId                 String                    @db.ObjectId
  buyingPrice             Float
  sellingPrice            Float
  supplier                Supplier                  @relation(fields: [supplierId], references: [id])
  supplierId              String                    @db.ObjectId
  reOrderPoint            Int
  warehouse               Warehouse                 @relation(fields: [warehouseId], references: [id])
  warehouseId             String                    @db.ObjectId
  imageUrl                String
  weight                  Float?
  dimensions              String?
  taxRate                 Float
  notes                   String?
  AddStockAdjustment      AddStockAdjustment[]
  TransferStockAdjustment TransferStockAdjustment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  Item        Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Unit {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  abbreviation String
  Item         Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Brand {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  Item  Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Warehouse {
  id                 String               @id @default(auto()) @map("_id") @db.ObjectId
  title              String
  location           String?
  description        String?
  type               String
  Item               Item[]
  AddStockAdjustment AddStockAdjustment[]

  // Add these two back-references for the TransferStockAdjustment relation
  givingTransferStockAdjustments    TransferStockAdjustment[] @relation("giving")
  receivingTransferStockAdjustments TransferStockAdjustment[] @relation("receiving")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AddStockAdjustment {
  id                   String    @id @default(auto()) @map("_id") @db.ObjectId
  referenceNumber      String
  addStockQty          Int
  warehouse            Warehouse @relation(fields: [receivingWarehouseId], references: [id])
  receivingWarehouseId String    @db.ObjectId
  item                 Item      @relation(fields: [itemId], references: [id])
  itemId               String    @db.ObjectId
  notes                String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TransferStockAdjustment {
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  referenceNumber  String
  transferStockQty Int

  givingWarehouse   Warehouse @relation("giving", fields: [givingWarehouseId], references: [id])
  givingWarehouseId String    @db.ObjectId

  receivingWarehouse   Warehouse @relation("receiving", fields: [receivingWarehouseId], references: [id])
  receivingWarehouseId String    @db.ObjectId

  item   Item   @relation(fields: [itemId], references: [id])
  itemId String @db.ObjectId
  notes  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Supplier {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  phone         String?
  email         String?
  address       String?
  contactPerson String?
  supplierCode  String  @unique
  paymentTerms  String?
  taxID         String?
  notes         String?
  Item          Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
